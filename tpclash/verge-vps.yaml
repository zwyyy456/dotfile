mixed-port: 7890 # 局域网访问Port
bind-address: "*" #绑定IP地址
allow-lan: true # 允许局域网访问
mode: rule # 模式
log-level: info # 日志等级
external-controller: 0.0.0.0:9090 # 网页端口
find-process-mode: strict # 匹配所有进程
tcp-concurrent: true # tcp 并发模式
ipv6: false #软路由上不建议开启

# clash meta 内核需要关闭 iptables
iptables:
  enable: false

# ui部分
# secret: ""
# external-ui: .\ui\public

geodata-mode: true
geox-url: # 自定义 geodata url, 需要有代理的前提才能下载geoip和geosite
  geoip: "https://gcore.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://gcore.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://gcore.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"

# fakeip 本地存储，省略DNS查询
profile:
  store-selected: true # 存储 select 选择记录
  store-fake-ip: true # 持久化 fake-ip

# Tun 配置 Windows使用
# tun:
#   enable: true
#   stack: system # gvisor / lwip
#   dns-hijack:
#     - any:53 # 需要劫持的 DNS
#   auto-route: true # 自动设置全局路由，可以自动将全局流量路由进入tun网卡。
#   auto-detect-interface: true # 自动识别出口网卡

dns:
  enable: true # 关闭将使用系统 DNS
  prefer-h3: true # 开启 DoH 支持 HTTP/3，将并发尝试
  listen: 0.0.0.0:1053 # 开启 DNS 服务器监听
  ipv6: false # 如果需要ipv6设置为true
  default-nameserver:
    # - 192.168.6.1 fakeip 模式不使用内网地址作为 dns
    # defautl dns 需要是纯 IP
    - https://223.5.5.5/dns-query
    - https://1.12.12.12/dns-query
    # - https://doh.pub/dns-query
    # - 223.5.5.5
    # - 1.12.12.12
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter: #这里可以填写不使用fakeip的域名
    - "*.lan"
    - "*.battlenet.com.cn"
    - "*.battlenet.com"
    - "*.blzstatic.cn"
    - "*.battle.net"
    # === Linksys Wireless Router ===
    - "*.linksys.com"
    - "*.linksyssmartwifi.com"
    # === Apple Software Update Service ===
    - "swscan.apple.com"
    - "mesu.apple.com"
    # === Windows 10 Connnect Detection ===
    - "*.msftconnecttest.com"
    - "*.msftncsi.com"
    # === NTP Service ===
    - "time.*.com"
    - "time.*.gov"
    - "time.*.edu.cn"
    - "time.*.apple.com"
    - "time1.*.com"
    - "time2.*.com"
    - "time3.*.com"
    - "time4.*.com"
    - "time5.*.com"
    - "time6.*.com"
    - "time7.*.com"
    - "ntp.*.com"
    - "ntp.*.com"
    - "ntp1.*.com"
    - "ntp2.*.com"
    - "ntp3.*.com"
    - "ntp4.*.com"
    - "ntp5.*.com"
    - "ntp6.*.com"
    - "ntp7.*.com"
    - "*.time.edu.cn"
    - "*.ntp.org.cn"
    - "+.pool.ntp.org"
    - "time1.cloud.tencent.com"
    # === Music Service ===
    ## NetEase
    - "+.music.163.com"
    - "*.126.net"
    ## Baidu
    - "musicapi.taihe.com"
    - "music.taihe.com"
    ## Kugou
    - "songsearch.kugou.com"
    - "trackercdn.kugou.com"
    ## Kuwo
    - "*.kuwo.cn"
    ## JOOX
    - "api-jooxtt.sanook.com"
    - "api.joox.com"
    - "joox.com"
    ## QQ
    - "+.y.qq.com"
    - "+.music.tc.qq.com"
    - "aqqmusic.tc.qq.com"
    - "+.stream.qqmusic.qq.com"
    ## Xiami
    - "*.xiami.com"
    ## Migu
    - "+.music.migu.cn"
    # === Game Service ===
    ## Nintendo Switch
    - "+.srv.nintendo.net"
    ## Sony PlayStation
    - "+.playstation.net"
    - "+.playstation.com"
    - "+.stun.playstation.net"
    # === Other ===
    ## QQ Quick Login
    - "localhost.ptlogin2.qq.com"
    ## Golang
    - "proxy.golang.org"
    ## STUN Server
    - "stun.*.*"
    - "stun.*.*.*"
    ## Bilibili CDN
    - "*.mcdn.bilivideo.cn"
    # === Other ===
    - "*.bilibili.com"
    - "*.1huizhan.com"
    - "*.3.cn"
    - "*.300hu.com"
    - "*.360buy.cn"
    - "*.360buy.com"
    - "*.360buy.com.cn"
    - "*.360buyimg.com"
    - "*.360buyinternational.com"
    - "*.360top.com"
    - "*.jd.com"

  nameserver:
    # - 192.168.6.1 fakeip 模式不使用内网地址作为 dns
    # - 223.5.5.5 # default value
    # - 114.114.114.114
    - https://223.5.5.5/dns-query
    - https://1.12.12.12/dns-query
    - https://doh.pub/dns-query
  fallback:
    - https://1.0.0.1/dns-query
    - tls://dns.google

# 策略组引用

pr: &a1
  type: select
  proxies:
    - "Auto"
  use:
    - zwy

auto: &a2
  type: url-test
  proxies:
  use:
    - zwy
  url: "http://connectivitycheck.gstatic.com/generate_204"
  interval: 300

pr1: &a3
  type: select
  proxies:
    - "PROXY"
    - "DIRECT"
  use:
    - zwy
pr2: &a4
  type: select
  proxies:
    - "PROXY"
  use:
    - zwy

prp: &prp
  type: http
  interval: 86400
  health-check:
    enable: true
    interval: 300
    # lazy: true
    url: http://connectivitycheck.gstatic.com/generate_204

rl1: &rl1
  type: http
  interval: 86400
  behavior: classical

rl2: &rl2
  type: http
  interval: 86400
  behavior: domain

#代理集  如果是自建节点屏蔽这里
proxy-providers:
  #自定义名称
  zwy:
    url: "https://gist.githubusercontent.com/zwyyy456/9b625f2547ed60be6ddd39c99178d962/raw/proxy-provider.yaml"
    path: ./profiles/zwy.yaml
    <<: *prp

proxy-groups:
  # 自动选择
  - name: "Auto"
    <<: *a2
  - name: "PROXY"
    <<: *a1
  - name: "youtube"
    <<: *a3
  - name: "telegram"
    <<: *a3
  - name: "apple"
    <<: *a3
  - name: "microsoft"
    <<: *a3
  - name: "openai"
    <<: *a4
  - name: "emby"
    <<: *a3
  - name: "spotify"
    <<: *a3
  - name: "gscholar"
    <<: *a3
  - name: "google"
    <<: *a3
  - name: "github"
    <<: *a3
  - name: "bilius"
    <<: *a3
  - name: "mdirect"
    <<: *a3
  - name: "mproxy"
    <<: *a3
  - name: "mpt"
    <<: *a3
  - name: "mtracker"
    <<: *a3

#规则集，规则用于 rules?
rule-providers:
  reject:
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"
    path: ./ruleset/reject.yaml
    <<: *rl2

  direct:
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt"
    path: ./ruleset/direct.yaml
    <<: *rl2

  gfw:
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt"
    path: ./ruleset/gfw.yaml
    <<: *rl2

  applecn:
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt"
    path: ./ruleset/applecn.yaml
    <<: *rl2

  cndirect:
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt"
    path: ./ruleset/cndirect.yaml
    <<: *rl2

  applications:
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"
    path: ./ruleset/applications.yaml
    <<: *rl1

  private:
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt"
    path: ./ruleset/private.yaml
    <<: *rl2

  gscholar:
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GlobalScholar/GlobalScholar.yaml"
    path: ./ruleset/gscholar.yaml
    <<: *rl1

  openai:
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/OpenAI/OpenAI.yaml"
    path: ./ruleset/openai.yaml
    <<: *rl1

  microsoft:
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Microsoft/Microsoft.yaml" # 包含 onedrive
    path: ./ruleset/microsoft.yaml
    <<: *rl1

  youtube:
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/YouTube/YouTube.yaml"
    path: ./ruleset/youtube.yaml
    <<: *rl1

  google:
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Google/Google.yaml"
    path: ./ruleset/google.yaml
    <<: *rl1

  github:
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GitHub/GitHub.yaml"
    path: ./ruleset/github.yaml
    <<: *rl1

  apple:
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Apple/Apple.yaml" # 包含 icloud
    path: ./ruleset/apple.yaml
    <<: *rl1

  bili_us:
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/BiliBiliIntl/BiliBiliIntl.yaml"
    path: ./ruleset/bili_us.yaml
    <<: *rl1

  spotify:
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Spotify/Spotify.yaml"
    path: ./ruleset/spotify.yaml
    <<: *rl1

  telegram:
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Telegram/Telegram.yaml"
    path: ./ruleset/telegram.yaml
    <<: *rl1

  emby:
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Emby/Emby.yaml"
    path: ./ruleset/emby.yaml
    <<: *rl1

  mpt:
    url: "https://gist.githubusercontent.com/zwyyy456/eb9aa537968491f143b9b2124d2e4b47/raw/pt-rule.yaml"
    path: ./ruleset/mpt.yaml
    <<: *rl1

  mtracker:
    path: ./ruleset/mtracker.yaml
    url: "https://gist.githubusercontent.com/zwyyy456/2edad3f6da907c96f503c0cca3c681a9/raw/tracker-rule.yaml"
    <<: *rl1

  mdirect:
    path: ./ruleset/mdirect.yaml
    url: "https://gist.githubusercontent.com/zwyyy456/4811d18198c3ad49d0485480eff22d9f/raw/direct-rule.yaml"
    <<: *rl1

  mproxy:
    path: ./ruleset/mproxy.yaml
    url: "https://gist.githubusercontent.com/zwyyy456/43afd8f49c179fddbfa54458e898eb2e/raw/proxy-rule.yaml"
    <<: *rl1

rules:
  # 开始匹配规则

  ## 直连
  - RULE-SET,cndirect,DIRECT
  - RULE-SET,direct,DIRECT
  - RULE-SET,applecn,DIRECT
  - RULE-SET,applications,DIRECT

  - RULE-SET,mtracker,mtracker
  - RULE-SET,mpt,mpt

  ## geo 直连
  - GEOSITE,cn,DIRECT
  - GEOIP, cn, DIRECT

  - RULE-SET,mdirect,mdirect
  - RULE-SET,mproxy,mproxy

  # 代理匹配
  - RULE-SET,gscholar,gscholar
  - RULE-SET,openai,openai
  - RULE-SET,microsoft,microsoft
  - RULE-SET,youtube,youtube
  - RULE-SET,google,google
  - RULE-SET,github,github
  - RULE-SET,apple,apple
  - RULE-SET,bili_us,bilius
  - RULE-SET,spotify,spotify
  - RULE-SET,telegram,telegram
  - RULE-SET,emby,emby
  - RULE-SET,gfw,PROXY
  - GEOSITE,geolocation-!cn,PROXY
  - RULE-SET,reject,REJECT

  - SRC-IP-CIDR,192.168.6.155/32,DIRECT
  - MATCH,PROXY

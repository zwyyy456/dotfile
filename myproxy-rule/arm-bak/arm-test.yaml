tproxy-port: 7893
mixed-port: 7890 # 局域网访问Port
bind-address: "*" #绑定IP地址
allow-lan: true # 允许局域网访问
mode: rule # 模式
log-level: info # 日志等级
external-controller: 0.0.0.0:9090 # 网页端口
find-process-mode: strict # 匹配所有进程
tcp-concurrent: true # tcp 并发模式
ipv6: false #软路由上不建议开启

# clash meta 内核需要关闭 iptables
iptables:
  enable: false

# 域名嗅探
sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  overrid-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
  force-domain:
    - tracker.*.com
  skip-domain:
    - Mijia Cloud

geodata-mode: true
geox-url: # 自定义 geodata url, 需要有代理的前提才能下载geoip和geosite
  geoip: "https://gcore.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://gcore.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://gcore.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"

# fakeip 本地存储，省略DNS查询
profile:
  store-selected: true # 存储 select 选择记录
  store-fake-ip: true # 持久化 fake-ip

# Tun 配置 Windows使用
tun:
  enable: true
  stack: system # gvisor / lwip
  dns-hijack:
    - any:53 # 需要劫持的 DNS
  auto-route: true # 自动设置全局路由，可以自动将全局流量路由进入tun网卡。
  auto-detect-interface: true # 自动识别出口网卡

dns:
  enable: true # 关闭将使用系统 DNS
  prefer-h3: true # 开启 DoH 支持 HTTP/3，将并发尝试
  listen: 0.0.0.0:1053 # 开启 DNS 服务器监听
  ipv6: false # 如果需要ipv6设置为true
  default-nameserver:
    # - 192.168.6.1 fakeip 模式不使用内网地址作为 dns
    # defautl dns 需要是纯 IP
    - https://223.5.5.5/dns-query
    - https://1.12.12.12/dns-query
    # - https://doh.pub/dns-query
    # - 223.5.5.5
    # - 1.12.12.12
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter: #这里可以填写不使用fakeip的域名
    - "*.jd.com"

  nameserver:
    # - 192.168.6.1 fakeip 模式不使用内网地址作为 dns
    # - 223.5.5.5 # default value
    # - 114.114.114.114
    - https://223.5.5.5/dns-query
    - https://1.12.12.12/dns-query
    - https://doh.pub/dns-query
  fallback:
    - https://1.0.0.1/dns-query
    - tls://dns.google

# 策略组引用

pr: &a1
  type: select
  proxies:
    - "Auto"
  use:
    - tao
    - zwy

auto: &a2
  type: url-test
  proxies:
  use:
    - tao
  url: "http://connectivitycheck.gstatic.com/generate_204"
  interval: 300

pr1: &a3
  type: select
  proxies:
    - "PROXY"
    - "DIRECT"
  use:
    - tao
    - zwy
pr2: &a4
  type: select
  proxies:
    - "PROXY"
  use:
    - beta
    - tao
    - zwy

prp: &prp
  type: http
  interval: 86400
  health-check:
    enable: true
    interval: 300
    # lazy: true
    url: http://connectivitycheck.gstatic.com/generate_204

rl1: &rl1
  type: http
  interval: 86400
  behavior: classical

rl2: &rl2
  type: http
  interval: 86400
  behavior: domain

rl3: &rl3
  type: http
  interval: 86400
  behavior: ipcidr

#代理集  如果是自建节点屏蔽这里
proxy-providers:
  #自定义名称
  tao:
    url: "https://2324.taosky.com/23reality24-sub-dsdadds132d" #订阅链接存放地址
    path: ./profiles/tao.yaml
    <<: *prp
  beta:
    url: "https://v2sub.betac1ouds.top/modules/servers/V2raySocks/NEWclash.php?sid=7197&token=zj72yNuIbqCx"
    path: ./profiles/beta.yaml
    <<: *prp
  zwy:
    url: "https://gist.githubusercontent.com/zwyyy456/9b625f2547ed60be6ddd39c99178d962/raw/proxy-provider.yaml"
    path: ./profiles/zwy.yaml
    <<: *prp

proxy-groups:
  # 自动选择
  - name: "Auto"
    <<: *a2
  - name: "PROXY"
    <<: *a1
  - name: "youtube"
    <<: *a3
  - name: "telegram"
    <<: *a3
  - name: "apple"
    <<: *a3
  - name: "microsoft"
    <<: *a3
  - name: "openai"
    <<: *a4
  - name: "emby"
    <<: *a3
  - name: "spotify"
    <<: *a3
  - name: "gscholar"
    <<: *a3
  - name: "google"
    <<: *a3
  - name: "github"
    <<: *a3
  - name: "bilius"
    <<: *a3
  - name: "mdirect"
    <<: *a3
  - name: "mproxy"
    <<: *a3
  - name: "mpt"
    <<: *a3
  - name: "mtracker"
    <<: *a3
  - name: "onedrive"
    <<: *a3
  - name: "stream"
    <<: *a3
  - name: "icloud"
    <<: *a3

rule-providers:
  mpt:
    url: "https://gist.githubusercontent.com/zwyyy456/eb9aa537968491f143b9b2124d2e4b47/raw/pt-rule.yaml"
    path: ./ruleset/mpt.yaml
    <<: *rl1

  mtracker:
    path: ./ruleset/mtracker.yaml
    url: "https://gist.githubusercontent.com/zwyyy456/2edad3f6da907c96f503c0cca3c681a9/raw/tracker-rule.yaml"
    <<: *rl1

  mdirect:
    path: ./ruleset/mdirect.yaml
    url: "https://gist.githubusercontent.com/zwyyy456/4811d18198c3ad49d0485480eff22d9f/raw/direct-rule.yaml"
    <<: *rl1

  mproxy:
    path: ./ruleset/mproxy.yaml
    url: "https://gist.githubusercontent.com/zwyyy456/43afd8f49c179fddbfa54458e898eb2e/raw/proxy-rule.yaml"
    <<: *rl1

  openai:
    url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/OpenAI/OpenAI.yaml"
    path: ./ruleset/openai.yaml
    <<: *rl1

  # loyalsoldier
  reject:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"
    path: ./ruleset/reject.yaml
    <<: *rl2
    interval: 86400

  icloud:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt"
    path: ./ruleset/icloud.yaml
    <<: *rl2
    interval: 86400

  apple-direct:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt"
    path: ./ruleset/apple-direct.yaml
    interval: 86400

  google-direct:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt"
    path: ./ruleset/google-direct.yaml
    <<: *rl2
    interval: 86400

  proxy:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt"
    path: ./ruleset/proxy.yaml
    <<: *rl2
    interval: 86400

  direct:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt"
    path: ./ruleset/direct.yaml
    <<: *rl2
    interval: 86400

  private:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt"
    path: ./ruleset/private.yaml
    <<: *rl2
    interval: 86400

  gfw:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt"
    path: ./ruleset/gfw.yaml
    <<: *rl2
    interval: 86400

  tld-not-cn:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt"
    path: ./ruleset/tld-not-cn.yaml
    <<: *rl2
    interval: 86400

  telegramcidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt"
    path: ./ruleset/telegramcidr.yaml
    <<: *rl3
    interval: 86400

  cncidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt"
    path: ./ruleset/cncidr.yaml
    <<: *rl3
    interval: 86400

  lancidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt"
    path: ./ruleset/lancidr.yaml
    <<: *rl3
    interval: 86400

  applications:
    type: http
    behavior: classical
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"
    path: ./ruleset/applications.yaml
    <<: *rl1
    interval: 86400

rules:
  # 开始匹配规则
  - RULE-SET,direct,DIRECT
  - RULE-SET,cncidr,DIRECT
  - RULE-SET,private,DIRECT
  - RULE-SET,mdirect,DIRECT
  - RULE-SET,mtracker,DIRECT
  - RULE-SET,apple-direct,DIRECT
  - RULE-SET,lancidr,DIRECT
  - RULE-SET,applications,DIRECT

  - RULE-SET,mpt,PROXY

  ## GEOSITE
  - GEOSITE,bilibili,DIRECT
  - GEOSITE,icloud,icloud
  - GEOSITE,onedrive,onedrive
  - GEOSITE,spotify,spotify
  - GEOSITE,youtube,youtube
  - GEOSITE,netflix,stream
  - GEOSITE,telegram,telegram
  - GEOSITE,github,github
  - GEOSITE,microsoft,microsoft
  - GEOSITE,openai,openai
  - GEOSITE,category-games@cn,DIRECT
  - GEOSITE,geolocation-!cn,PROXY
  - GEOSITE,cn,DIRECT

  - RULE-SET,telegramcidr,telegram
  - RULE-SET,gfw,PROXY
  - GEOIP,cn,DIRECT
  - MATCH,PROXY
